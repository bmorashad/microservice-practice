apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: {{.Values.mesh.namespace}}
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
    # - name: "mysql"
    - port: 3306
      # targetPort: 3306
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{.Values.mesh.namespace}}
  name: db
  labels:
    app: db
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: ecommerce
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:latest
          # livenessProbe:
          #   exec:
          #     command:
          #       - mysqladmin
          #       - ping
          #       - -h
          #       - localhost
          #   failureThreshold: 10
          #   timeoutSeconds: 20
          name: db
          ports:
            - containerPort: 3306
              # hostPort: 3306
              protocol: TCP
          volumeMounts:
            - name: db-persistent-storage
              mountPath: /var/lib/mysql
      # restartPolicy: Always
      # volumes:
      # - name: db-persistent-storage
      #   persistentVolumeClaim:
      #     claimName: db-pvc
        # emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: db-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Release.Name }}-storage
      resources:
        requests:
          storage: 10Gi
---
