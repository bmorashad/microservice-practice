apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: {{.Values.mesh.namespace}}
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
    # - name: "mysql"
    - port: 3306
      # targetPort: 3306
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{.Values.mesh.namespace}}
  name: db
  labels:
    app: db
spec:
  replicas: 2
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: ecommerce
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:latest
          # livenessProbe:
          #   exec:
          #     command:
          #       - mysqladmin
          #       - ping
          #       - -h
          #       - localhost
          #   failureThreshold: 10
          #   timeoutSeconds: 20
          name: db
          ports:
            - containerPort: 3306
              # hostPort: 3306
              protocol: TCP
          volumeMounts:
          - name: db-persistent-storage
            mountPath: /var/lib/mysql
      restartPolicy: Always
  # volumes:
  # - name: mysql-persistent-storage
  #   persistentVolumeClaim:
  #   claimName: mysql-pv-claim
  volumeClaimTemplates:
  - metadata:
      name: db-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
# https://kubernetes.io/docs/concepts/storage/persistent-volumes/
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db
  namespace: {{.Values.mesh.namespace}}
  labels:
    app: db
spec:
  # AKS: default,managed-premium
  # GKE: standard
  # EKS: gp2 (custom)
  # Rook: rook-ceph-block,rook-ceph-fs
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---

